///////////////////////////////////////////////////////////////////////////////
//  Filename       : Block.h                                                 //
//                   Block.cpp                                               //
//  Date           : 2009/02/09 ~ 2009/02/12                                 //
//  Author         : Bak Yeono (bakyeono@gmail.com)                          //
//  Description    : This class stores tetris block.                         //
///////////////////////////////////////////////////////////////////////////////

#include "Block.h"

//////////////////
// Constructor  //
Block::Block(void)
//////////////////
{
    this->stateSettled= false;
    this->posX= 0;
    this->posY= 0;
    this->modelNumber= 0;
}

///////////////////
// Destructor    //
Block::~Block(void)
///////////////////
{
}

///////////////////////////////////
// IsSettled                     //
bool Block::IsSettled( void ) const
///////////////////////////////////
{
    return stateSettled;
}

///////////////////////////////////////
// GetModelNumber                    //
int Block::GetNodelNumber( void ) const
///////////////////////////////////////
{
    return modelNumber;
}

/////////////////////////
// Start               //
void Block::Start( void )
/////////////////////////
{
    Dice dice( 0, NUMBER_OF_BLOCK_MODELS - 1 );

    this->stateSettled= false;
    this->posX= 7;
    this->posY= 0;
    this->modelNumber= dice.Roll( 1 );
}

//////////////////////////
// MoveRotate           //
void Block::Rotate( void )
//////////////////////////
{
    if( ( modelNumber % 4 ) == 3 )
        modelNumber-= 3;
    else
        modelNumber++;

    return;
}

////////////////////////////
// MoveLeft               //
void Block::MoveLeft( void )
////////////////////////////
{
    posX--;

    return;
}

/////////////////////////////
// MoveRight               //
void Block::MoveRight( void )
/////////////////////////////
{
    posX++;

    return;
}

////////////////////////////
// MoveDown               //
void Block::MoveDown( void )
////////////////////////////
{
    posY++;

    return;
}

/////////////////////////
// Constant Block Data //
/////////////////////////
const char Block::blockModel[NUMBER_OF_BLOCK_MODELS][4][4]=
{
    /* blockModel[0]  -- blockModelType0
       бс
       бсбсбс */ 
    {
        {3,0,0,0},
        {3,3,3,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {0,3,0,0},
        {0,3,0,0},
        {3,3,0,0},
        {0,0,0,0} },
    {
        {3,3,3,0},
        {0,0,3,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {3,3,0,0},
        {3,0,0,0},
        {3,0,0,0},
        {0,0,0,0} },
    /* blockModel[4]  -- blockModelType1
           бс 
       бсбсбс */ 
    {
        {0,0,4,0},
        {4,4,4,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {4,4,0,0},
        {0,4,0,0},
        {0,4,0,0},
        {0,0,0,0} },
    {
        {4,4,4,0},
        {4,0,0,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {4,0,0,0},
        {4,0,0,0},
        {4,4,0,0},
        {0,0,0,0} },
    /* blockModel[8]  -- blockModelType2
         бс
       бсбсбс */ 
    {
        {0,5,0,0},
        {5,5,5,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {0,5,0,0},
        {5,5,0,0},
        {0,5,0,0},
        {0,0,0,0} },
    {
        {0,0,0,0},
        {5,5,5,0},
        {0,5,0,0},
        {0,0,0,0} },
    {
        {0,5,0,0},
        {0,5,5,0},
        {0,5,0,0},
        {0,0,0,0} },
    /* blockModel[12]  -- blockModelType3
       бс
       бс
       бс
       бс */ 
    {
        {0,6,0,0},
        {0,6,0,0},
        {0,6,0,0},
        {0,6,0,0} },
    {
        {0,0,0,0},
        {6,6,6,6},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {0,6,0,0},
        {0,6,0,0},
        {0,6,0,0},
        {0,6,0,0} },
    {
        {0,0,0,0},
        {6,6,6,6},
        {0,0,0,0},
        {0,0,0,0} },
    /* blockModel[16]  -- blockModelType4
       бсбс
       бсбс */ 
    {
        {7,7,0,0},
        {7,7,0,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {7,7,0,0},
        {7,7,0,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {7,7,0,0},
        {7,7,0,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {7,7,0,0},
        {7,7,0,0},
        {0,0,0,0},
        {0,0,0,0} },
    /* blockModel[20]  -- blockModelType5
         бсбс
       бсбс */ 
    {
        {0,8,8,0},
        {8,8,0,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {0,8,0,0},
        {0,8,8,0},
        {0,0,8,0},
        {0,0,0,0} },
    {
        {0,8,8,0},
        {8,8,0,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {0,8,0,0},
        {0,8,8,0},
        {0,0,8,0},
        {0,0,0,0} },
    /* blockModel[24]  -- blockModelType6
       бсбс
         бсбс */ 
    {
        {9,9,0,0},
        {0,9,9,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {0,0,9,0},
        {0,9,9,0},
        {0,9,0,0},
        {0,0,0,0} },
    {
        {9,9,0,0},
        {0,9,9,0},
        {0,0,0,0},
        {0,0,0,0} },
    {
        {0,0,9,0},
        {0,9,9,0},
        {0,9,0,0},
        {0,0,0,0} }
};

/* end of file */
